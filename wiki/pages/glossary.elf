%%! title: "Glossary"

%{! This **glossary** should include most of the unfamiliar concepts that
someone with an undergraduate-level understanding of type theory would
encounter in the process of learning to use Twelf. Some of these links point to
extensive tutorials, but in those cases the first paragraph or two should
include a definition of the concept.

* [Adequacy](/wiki/adequacy/)
* [Alpha-equivalence](/wiki/alpha-equivalence/) (i.e. "α-equivalence")
* [Beta-equivalence](/wiki/beta-equivalence/) (i.e. "β-equivalence")
* [Canonical form](/wiki/canonical-form/)
* [Canonical forms lemma](/wiki/canonical-forms-lemma/)
* [Compatibility lemma](/wiki/respects-lemma/)
* [Congruence relation](/wiki/congruence-relation/)
* [Congruence lemma](/wiki/respects-lemma/)
* [Constraint domain](/wiki/constraint-domain/)
* [Coverage checking](/wiki/coverage-checking/)
* [Effectiveness lemma](/wiki/effectiveness-lemma/)
* [Equality](/wiki/equality/)
* [Equivalence relation](/wiki/equivalence-relation/)
* [Eta-equivalence](/wiki/eta-equivalence/) (i.e. "η-equivalence")
* [Eta-long form](/wiki/eta-equivalence/) (i.e. "η-long form")
* [Exchange lemma](/wiki/exchange-lemma/)
* [Explicit parameter](/wiki/implicit-and-explicit-parameters/)
* [Explicit context](/wiki/explicit-context/)
* [Extrinsic encoding](/wiki/intrinsic-and-extrinsic-encodings/)
* [Function](/wiki/function/)
* [Ground](/wiki/ground/)
* [Higher-order abstract syntax](/wiki/higher-order-abstract-syntax/)
* [Higher-order judgement](/wiki/higher-order-judgements/)
* [Hereditary substitution](/wiki/hereditary-substitution/)
* [Hypothetical judgment](/wiki/hypothetical-judgment/)
* [Implicit parameter](/wiki/implicit-and-explicit-parameters/)
* [Intrinsic encoding](/wiki/intrinsic-and-extrinsic-encodings/)
* [Judgment](/wiki/judgment/)
* [Judgments as types](/wiki/judgment/)
* [LF](/wiki/lf/)
* [Logic programming](/wiki/logic-programming/)
* [Meta-logic](/wiki/meta-logic/)
* [Metatheorem](/wiki/metatheorem/)
* [Mode checking](/wiki/percent-mode/)
* [Object logic](/wiki/object-logic/)
* [Relation](/wiki/relation/)
* [Regular worlds](/wiki/percent-worlds/)
* [Respects lemma](/wiki/respects-lemma/)
* [Substitution lemma](/wiki/substitution-lemma/)
* [Subordination](/wiki/subordination/)
* [Tabled logic programming](/wiki/tabled-logic-programming/)
* [Tactical theorem proving](/wiki/tactical-theorem-proving/)
* [Theorem prover](/wiki/theorem-prover/)
* [Totality assertion](/wiki/totality-assertion/)
* [Totality checking](/wiki/percent-total/)
* [Type family](/wiki/type-family/)
* [Twelf signature](/wiki/twelf-signature/)
* [Unification](/wiki/unification/)
* [Uniqueness lemma](/wiki/uniqueness-lemma/)
* [Weakening lemma](/wiki/weakening-lemma/)
* [World checking](/wiki/percent-worlds/)
* [World subsumption](/wiki/world-subsumption/) !}%

