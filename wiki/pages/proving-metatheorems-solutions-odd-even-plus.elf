%%! title: "Solution: proofs about adding even and odd numbers"
%%! description: "Showing how addition interacts with the evenness or oddness of numbers (Part of the introduction to proving metatheorems in Twelf)"

%{!
_This page is part of the introduction to [proving metatheorems with Twelf](/wiki/proving-metatheorems-with-twelf/)._

Exercise 4 from [the part 1 exercises](/wiki/proving-metatheorems-summary-the-natural-numbers/): Prove remaining properties of how evenness and oddness interacts with addition:
- State and prove the theorem `sum-even-odd` that shows that the sum of an even and an odd number results in an odd number
- State and prove a theorem `sum-odd-even` that shows that the sum of an odd plus an even number produces an odd number
- Finally, state and prove a theorem `sum-odds` that shows that the sum of two odd numbers produces an even number

Starting with the preliminaries, including the [definition of `odd` from exercise 2](/wiki/proving-metatheorems-solutions-define-odd/):

!}%

nat : type.
z   : nat.
s   : nat -> nat.

plus   : nat -> nat -> nat -> type.
plus-z : plus z N2 N2.
plus-s : plus (s N1) N2 (s N3)
          <- plus N1 N2 N3.

even   : nat -> type.
even-z : even z.
even-s : even (s (s N)) 
          <- even N.

odd   : nat -> type.
odd-1 : odd (s z).
odd-s : odd N -> odd (s (s N)).

%{! ## The sum of an even and odd number is odd !}%

%{!! begin checked !!}%
sum-even-odd : even N1 -> odd N2 -> plus N1 N2 N3 -> odd N3 -> type.
%mode sum-even-odd +D1 +D2 +D3 -D4.

seoz : sum-even-odd even-z OddN2 plus-z OddN2.

seos : sum-even-odd
       (even-s EvenN1)
       OddN2
       (plus-s (plus-s PlusN1N2N3))
       (odd-s OddN3)
       <- sum-even-odd EvenN1 OddN2 PlusN1N2N3 OddN3.

%worlds () (sum-even-odd _ _ _ _).
%total D (sum-even-odd D _ _ _).
%{!! end checked !!}%

%{! ## The sum of an odd and an even number is odd 

Unlike the previous proof that the sum of an even number and on odd, the base case of this proof is easiest to prove by reusing one of the lemmas a previous exercise.

Neither answer is better than the other! It's valuable to think through the answer that you didn't select, as it's important to be able to think through multiple ways of proving the same theorem.

### Likely proof, reusing `succ-even`

If you've just written `sum-even-odd`, and try to adapt the structure of that proof, the easiest approach is to reuse [`succ-even` from Exercise 3](/wiki/proving-metatheorems-solutions-odd-even-succ/), the proof that the successor of an even number is odd.

We'll first repeat that proof:
!}%

succ-even : even N -> odd (s N) -> type.
%mode succ-even +D1 -D2.

sez : succ-even even-z odd-1.

ses : succ-even (even-s EvenA) (odd-s OddA)
       <- succ-even EvenA OddA.

%worlds () (succ-even _ _).
%total D (succ-even D _).

%{! With `succ-even` in hand, the proof of `sum-odd-even` has the same structure as the proof of `sum-even-odd`: !}%

%{!! begin checked !!}%
sum-odd-even : odd N1 -> even N2 -> plus N1 N2 N3 -> odd N3 -> type.
%mode sum-odd-even +D1 +D2 +D3 -D4.

soe1 : sum-odd-even odd-1 EvenN2 _ OddN3
        <- succ-even EvenN2 OddN3.

soes : sum-odd-even
        (odd-s OddN1)
        EvenN2
        (plus-s (plus-s PlusN1N2N3))
        (odd-s OddN3)
        <- sum-odd-even OddN1 EvenN2 PlusN1N2N3 OddN3.

%worlds () (sum-odd-even _ _ _ _).
%total D (sum-odd-even D _ _ _).
%{!! end checked !!}%

%{! ### Alternative solution, reusing `succ-even-odd` and `plus-commutes`

Another proof of `sum-odd-even` uses the previously proved `sum-even-odd` along with the proof of the [proof of the commutativity of plus from Exercise 1](/wiki/proving-metatheorems-solution-plus-comm/). The `sum-even-odd` proof is a bit involved:

!}%

plus-zero-id :  {N1 : nat} plus N1 z N1 -> type.
%mode plus-zero-id +N -D.

pzidz : plus-zero-id
         z
         plus-z.

pzids : plus-zero-id
         (s N)
         (plus-s D : plus (s N) z (s N))
          <- plus-zero-id N D.

%worlds () (plus-zero-id _ _).
%total N (plus-zero-id N _).

plus-flip : plus N1 N2 N3 -> plus N1 (s N2) (s N3) -> type.
%mode plus-flip +D1 -D2.

pfz : plus-flip 
       _
       plus-z.

pfs : plus-flip
       (plus-s Dplus : plus (s N1) N2 (s N3))
       (plus-s DIH   : plus (s N1) (s N2) (s (s N3)))
         <- plus-flip Dplus DIH.
%worlds () (plus-flip _ _).
%total D (plus-flip D _).

plus-commutes : plus N1 N2 N3 -> plus N2 N1 N3 -> type.
%mode plus-commutes +D1 -D2.

pcz : plus-commutes
       _
       D
        <- plus-zero-id N1 D.
       
pcs : plus-commutes       
       (plus-s Dplus: plus (s N1') N2 (s N3'))
       D
        <- plus-commutes Dplus DIH
        <- plus-flip DIH D.

%worlds () (plus-commutes _ _).
%total D (plus-commutes D _).


%{! Once that proof is available, the proof of `sum-odd-even` requires no additional induction: !}%

%{!! begin checked !!}%
sum-odd-even : odd M -> even N -> plus M N P -> odd P -> type.
%mode sum-odd-even +O +E +P -O2.

soe : sum-odd-even
       (O : odd M)
       (E : even N)
       (A : plus M N P)
       (O0 : odd P)
       <- plus-commutes A A0
       <- sum-even-odd E O A0 O0.

%worlds () (sum-odd-even _ _ _ _).
%total [] (sum-odd-even D _ _ _).
%{!! end checked !!}%



%{! ## The sum of two odd numbers is even 

The most straightforward approach here reuses [`succ-odd` from Exercise 3](/wiki/proving-metatheorems-solutions-odd-even-succ/) in exactly the same way as the "expected" solution to the previous theorem reused `succ-even`.

First, we'll 
!}%

succ-odd : odd N -> even (s N) -> type.
%mode succ-odd +D1 -D2.

so1 : succ-odd odd-1 (even-s even-z).

sos : succ-odd (odd-s OddA) (even-s EvenA)
       <- succ-odd OddA EvenA.

%worlds () (succ-odd _ _).
%total D (succ-odd D _).

%{! With that out of the way, the proof of `sum-odds` has the same structure as the previous solutions: !}%

%{!! begin checked !!}%
sum-odds : odd N1 -> odd N2 -> plus N1 N2 N3 -> even N3 -> type.
%mode sum-odds +D1 +D2 +D3 -D4.

soz : sum-odds odd-1 OddN2 _ EvenN3
       <- succ-odd OddN2 EvenN3.

sos : sum-odds (odd-s OddN1) OddN2 (plus-s (plus-s PlusN1N2N3)) (even-s
EvenN3)
       <- sum-odds OddN1 OddN2 PlusN1N2N3 EvenN3.

%worlds () (sum-odds _ _ _ _).
%total D (sum-odds D _ _ _).
%{!! end checked !!}%