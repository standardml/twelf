%%! title: "%solve"

%{!
A ``[%solve](/wiki/percent-solve/)`` declaration specifies a type and then uses Twelf's [logic programming](/wiki/logic-programming/) engine to search for an term with that type. It is different from ``[%query](/wiki/percent-query/)``, both because it can only cause Twelf to search for the _first_ proof it can find and because it can add the result of the search to the [Twelf signature](/wiki/twelf-signature/).

#
# Example

We can define [natural numbers](/wiki/natural-numbers/) with addition in the standard manner:

&lt;twelf&gt;
nat : type.
z : nat.
s : nat -&gt; nat.

plus : nat -&gt; nat -&gt; nat -&gt; type.
pz : plus z N N.
ps : plus N1 N2 N3 -&gt; plus (s N1) N2 (s N3).
&lt;/twelf&gt;

Then we can use ``%solve`` and ``%define`` to insert the result of adding two and two to the signature as ``four``, and the derivation itself to the signature as ``deriv``.

&lt;twelf check=decl&gt;
%define four = N
%solve deriv : plus (s (s z)) (s (s z)) N.
&lt;/twelf&gt;

We can then use ``five`` and ``deriv`` as a defined constants for the rest of the program:

&lt;twelf check=true&gt;
six : nat = s (s four).
deriv2 : plus four (s (s z)) six = ps (ps deriv).
&lt;/twelf&gt;

#
# See also

* \{\{guide|title=Solve Declaration|section=24|chapter=5\}\}


\{\{keyword|key=solve\}\}
!}%
